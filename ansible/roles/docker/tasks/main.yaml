---

- name: Ensure keyring directory exists
  ansible.builtin.file:
    mode: "0755"
    state: directory
    owner: "{{ su_user }}"
    group: "{{ su_group }}"
    path: "{{ apt.keyring }}"
  tags:
    - docker

- name: Install Docker keyring
  ansible.builtin.get_url:
    mode: "0644"
    owner: "{{ su_user }}"
    group: "{{ su_group }}"
    url: >-
      https://download.docker.com/linux/{{ ansible_facts.os_family | lower }}/gpg
    dest: "{{ apt.keyring }}/docker.asc"
  tags:
    - docker

# Note : Maybe should look at notifier for apt-cache update?
- name: Setup Docker source
  ansible.builtin.template:
    src: templates/apt-source.j2
    dest: "{{ apt.sources }}/docker.list"
    owner: "{{ su_user }}"
    group: "{{ su_group }}"
    mode: "0644"
  tags:
    - docker

# FIXME - If this was the first task in the role, we could short circuit if all installed.
- name: Check for installed Docker packages
  ansible.builtin.package_facts:
    manager:
      - apt
  register: packages
  tags:
    - docker

- name: Install Docker packages from apt
  vars:
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
  ansible.builtin.apt:
    clean: true
    update_cache: true
    install_recommends: false
    name:
      - "{{ item }}"
  with_items: "{{ docker_packages | difference(packages['ansible_facts']['packages'].keys()) }}"
  tags:
    - docker

- name: Ensure expected users exists
  ansible.builtin.getent:
    database: group
    key: "{{ item }}"
  register: user_state
  loop:
    - "{{ docker_group }}"
    - "{{ system_user }}"
  tags:
    - docker

- name: Get user's current groups
  ansible.builtin.command:
    cmd: id {{ system_user }}
  register: user_groups
  changed_when:
    - false  # This operation is idempotent
  tags:
    - docker

- name: Add user to Docker group, if required
  become: true
  ansible.builtin.command:
    cmd: usermod -aG {{ docker_group }} {{ system_user }}
  register: docker_usermod
  failed_when:
    - docker_usermod.rc != 0
  changed_when:
    - docker_usermod.rc == 0
  when:
    - 'docker_group not in user_groups.stdout'
  tags:
    - docker
