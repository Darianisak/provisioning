---

- name: Gather installed package lists.
  vars:
    apt_action_type: 'installed'
  ansible.builtin.include_role:
    name: apt
  tags:
    - docker


- name: Set up Docker packages
  vars:
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
  tags:
    - docker
  when: "docker_packages is not subset(apt_installed_packages)"
  block:
    - name: Ensure keyring directory exists
      ansible.builtin.file:
        mode: "0755"
        state: directory
        owner: "{{ su_user }}"
        group: "{{ su_group }}"
        path: "{{ apt.keyring }}"

    - name: Install Docker keyring
      ansible.builtin.get_url:
        mode: "0644"
        owner: "{{ su_user }}"
        group: "{{ su_group }}"
        url: https://download.docker.com/linux/{{ apt_distribution }}/gpg
        dest: "{{ apt.keyring }}/docker.asc"

    - name: Setup Docker source
      vars:
        keyring_path: "{{ apt.keyring }}/docker.asc"
      ansible.builtin.template:
        src: templates/apt-source.j2
        dest: "{{ apt.sources }}/docker.list"
        owner: "{{ su_user }}"
        group: "{{ su_group }}"
        mode: "0644"

    - name: Install Docker packages from apt
      ansible.builtin.apt:
        clean: true
        update_cache: true
        install_recommends: false
        name:
          - "{{ item }}"
      with_items: "{{ docker_packages | difference(apt_installed_packages) }}"


- name: Gather installed package lists.
  vars:
    apt_action_type: 'installed'
  ansible.builtin.include_role:
    name: apt
  tags:
    - docker


- name: Set up user permissions
  tags:
    - docker
  # This might be flawed logic, but I assume `docker-ce` is the only
  # package that matters wrt permissions.
  #
  when: "'docker-ce' in apt_installed_packages"
  block:
    - name: Ensure expected users exists
      ansible.builtin.getent:
        database: group
        key: "{{ item }}"
      loop:
        - "{{ docker_group }}"
        - "{{ system_user }}"

    - name: Get user's current groups
      ansible.builtin.command:
        cmd: id {{ system_user }}
      register: user_groups
      changed_when:
        - false  # This operation is idempotent
      tags:
        - docker

    - name: Add user to Docker group, if required
      become: true
      ansible.builtin.command:
        cmd: usermod -aG {{ docker_group }} {{ system_user }}
      register: docker_usermod
      failed_when:
        - docker_usermod.rc != 0
      changed_when:
        - docker_usermod.rc == 0
      when:
        - 'docker_group not in user_groups.stdout'
